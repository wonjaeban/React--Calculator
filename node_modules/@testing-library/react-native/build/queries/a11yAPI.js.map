{"version":3,"sources":["../../src/queries/a11yAPI.ts"],"names":["matchStringValue","prop","matcher","Boolean","match","matchArrayValue","length","includes","some","e","matchObject","Object","keys","key","a11yAPI","instance","getBy","getAllBy","queryBy","queryAllBy","findBy","findAllBy"],"mappings":"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","sourcesContent":["import type { ReactTestInstance } from 'react-test-renderer';\nimport type { AccessibilityRole, AccessibilityState } from 'react-native';\nimport type { WaitForOptions } from '../waitFor';\nimport type { TextMatch } from '../matches';\nimport makeA11yQuery from './makeA11yQuery';\n\ntype AccessibilityStateKey = keyof AccessibilityState;\ntype A11yValue = {\n  min?: number;\n  max?: number;\n  now?: number;\n  text?: string;\n};\n\ntype GetReturn = ReactTestInstance;\ntype GetAllReturn = Array<ReactTestInstance>;\ntype QueryReturn = ReactTestInstance | null;\ntype QueryAllReturn = Array<ReactTestInstance>;\ntype FindReturn = Promise<GetReturn>;\ntype FindAllReturn = Promise<GetAllReturn>;\n\nexport type A11yAPI = {\n  // Label\n  getByLabelText: (label: TextMatch) => GetReturn;\n  getAllByLabelText: (label: TextMatch) => GetAllReturn;\n  queryByLabelText: (label: TextMatch) => QueryReturn;\n  queryAllByLabelText: (label: TextMatch) => QueryAllReturn;\n  findByLabelText: (\n    label: TextMatch,\n    waitForOptions?: WaitForOptions\n  ) => FindReturn;\n  findAllByLabelText: (\n    label: TextMatch,\n    waitForOptions?: WaitForOptions\n  ) => FindAllReturn;\n\n  // Hint\n  getByA11yHint: (a11yHint: TextMatch) => GetReturn;\n  getByHintText: (a11yHint: TextMatch) => GetReturn;\n  getAllByA11yHint: (a11yHint: TextMatch) => GetAllReturn;\n  getAllByHintText: (a11yHint: TextMatch) => GetAllReturn;\n  queryByA11yHint: (a11yHint: TextMatch) => QueryReturn;\n  queryByHintText: (a11yHint: TextMatch) => QueryReturn;\n  queryAllByA11yHint: (a11yHint: TextMatch) => QueryAllReturn;\n  queryAllByHintText: (a11yHint: TextMatch) => QueryAllReturn;\n  findByA11yHint: (\n    a11yHint: TextMatch,\n    waitForOptions?: WaitForOptions\n  ) => FindReturn;\n  findByHintText: (\n    a11yHint: TextMatch,\n    waitForOptions?: WaitForOptions\n  ) => FindReturn;\n  findAllByA11yHint: (\n    a11yHint: TextMatch,\n    waitForOptions?: WaitForOptions\n  ) => FindAllReturn;\n  findAllByHintText: (\n    a11yHint: TextMatch,\n    waitForOptions?: WaitForOptions\n  ) => FindAllReturn;\n\n  // Role\n  getByRole: (role: AccessibilityRole | RegExp) => GetReturn;\n  getAllByRole: (role: AccessibilityRole | RegExp) => GetAllReturn;\n  queryByRole: (role: AccessibilityRole | RegExp) => QueryReturn;\n  queryAllByRole: (role: AccessibilityRole | RegExp) => QueryAllReturn;\n  findByRole: (\n    role: AccessibilityRole,\n    waitForOptions?: WaitForOptions\n  ) => FindReturn;\n  findAllByRole: (\n    role: AccessibilityRole,\n    waitForOptions?: WaitForOptions\n  ) => FindAllReturn;\n\n  // States\n  getByA11yStates: (\n    accessibilityStateKey: AccessibilityStateKey | Array<AccessibilityStateKey>\n  ) => GetReturn;\n  getAllByA11yStates: (\n    accessibilityStateKey: AccessibilityStateKey | Array<AccessibilityStateKey>\n  ) => GetAllReturn;\n  queryByA11yStates: (\n    accessibilityStateKey: AccessibilityStateKey | Array<AccessibilityStateKey>\n  ) => QueryReturn;\n  queryAllByA11yStates: (\n    accessibilityStateKey: AccessibilityStateKey | Array<AccessibilityStateKey>\n  ) => QueryAllReturn;\n  findByA11yStates: (\n    accessibilityStateKey: AccessibilityStateKey,\n    waitForOptions?: WaitForOptions\n  ) => FindReturn;\n  findAllByA11yStates: (\n    accessibilityStateKey: AccessibilityStateKey,\n    waitForOptions?: WaitForOptions\n  ) => FindAllReturn;\n\n  // State\n  getByA11yState: (accessibilityState: AccessibilityState) => GetReturn;\n  getAllByA11yState: (accessibilityState: AccessibilityState) => GetAllReturn;\n  queryByA11yState: (accessibilityState: AccessibilityState) => QueryReturn;\n  queryAllByA11yState: (\n    accessibilityState: AccessibilityState\n  ) => QueryAllReturn;\n  findByA11yState: (\n    accessibilityState: AccessibilityState,\n    waitForOptions?: WaitForOptions\n  ) => FindReturn;\n  findAllByA11yState: (\n    accessibilityState: AccessibilityState,\n    waitForOptions?: WaitForOptions\n  ) => FindAllReturn;\n\n  // Value\n  getByA11yValue: (a11yValue: A11yValue) => GetReturn;\n  getAllByA11yValue: (a11yValue: A11yValue) => GetAllReturn;\n  queryByA11yValue: (a11yValue: A11yValue) => QueryReturn;\n  queryAllByA11yValue: (a11yValue: A11yValue) => QueryAllReturn;\n  findByA11yValue: (\n    a11yValue: A11yValue,\n    waitForOptions?: WaitForOptions\n  ) => FindReturn;\n  findAllByA11yValue: (\n    a11yValue: A11yValue,\n    waitForOptions?: WaitForOptions\n  ) => FindAllReturn;\n};\n\nexport function matchStringValue(\n  prop: string | undefined,\n  matcher: TextMatch\n): boolean {\n  if (!prop) {\n    return false;\n  }\n\n  if (typeof matcher === 'string') {\n    return prop === matcher;\n  }\n\n  return Boolean(prop.match(matcher));\n}\n\nexport function matchArrayValue(\n  prop: Array<string> | undefined,\n  matcher: string | Array<string>\n): boolean {\n  if (!prop || matcher.length === 0) {\n    return false;\n  }\n\n  if (typeof matcher === 'string') {\n    return prop.includes(matcher);\n  }\n\n  return !matcher.some((e) => !prop.includes(e));\n}\n\nexport function matchObject<T extends Record<string, unknown>>(\n  prop: T | undefined,\n  matcher: T\n): boolean {\n  return prop\n    ? Object.keys(matcher).length !== 0 &&\n        Object.keys(prop).length !== 0 &&\n        !Object.keys(matcher).some((key) => prop[key] !== matcher[key])\n    : false;\n}\n\nexport const a11yAPI = (instance: ReactTestInstance): A11yAPI =>\n  ({\n    ...makeA11yQuery(\n      'accessibilityLabel',\n      {\n        getBy: ['getByLabelText'],\n        getAllBy: ['getAllByLabelText'],\n        queryBy: ['queryByLabelText'],\n        queryAllBy: ['queryAllByLabelText'],\n        findBy: ['findByLabelText'],\n        findAllBy: ['findAllByLabelText'],\n      },\n      matchStringValue\n    )(instance),\n    ...makeA11yQuery(\n      'accessibilityHint',\n      {\n        getBy: ['getByA11yHint', 'getByAccessibilityHint', 'getByHintText'],\n        getAllBy: [\n          'getAllByA11yHint',\n          'getAllByAccessibilityHint',\n          'getAllByHintText',\n        ],\n        queryBy: [\n          'queryByA11yHint',\n          'queryByAccessibilityHint',\n          'queryByHintText',\n        ],\n        queryAllBy: [\n          'queryAllByA11yHint',\n          'queryAllByAccessibilityHint',\n          'queryAllByHintText',\n        ],\n        findBy: ['findByA11yHint', 'findByAccessibilityHint', 'findByHintText'],\n        findAllBy: [\n          'findAllByA11yHint',\n          'findAllByAccessibilityHint',\n          'findAllByHintText',\n        ],\n      },\n      matchStringValue\n    )(instance),\n    ...makeA11yQuery(\n      'accessibilityRole',\n      {\n        getBy: ['getByRole'],\n        getAllBy: ['getAllByRole'],\n        queryBy: ['queryByRole'],\n        queryAllBy: ['queryAllByRole'],\n        findBy: ['findByRole'],\n        findAllBy: ['findAllByRole'],\n      },\n      matchStringValue\n    )(instance),\n    ...makeA11yQuery(\n      'accessibilityStates',\n      {\n        getBy: ['getByA11yStates', 'getByAccessibilityStates'],\n        getAllBy: ['getAllByA11yStates', 'getAllByAccessibilityStates'],\n        queryBy: ['queryByA11yStates', 'queryByAccessibilityStates'],\n        queryAllBy: ['queryAllByA11yStates', 'queryAllByAccessibilityStates'],\n        findBy: ['findByA11yStates', 'findByAccessibilityStates'],\n        findAllBy: ['findAllByA11yStates', 'findAllByAccessibilityStates'],\n      },\n      matchArrayValue\n    )(instance),\n    ...makeA11yQuery(\n      'accessibilityState',\n      {\n        getBy: ['getByA11yState', 'getByAccessibilityState'],\n        getAllBy: ['getAllByA11yState', 'getAllByAccessibilityState'],\n        queryBy: ['queryByA11yState', 'queryByAccessibilityState'],\n        queryAllBy: ['queryAllByA11yState', 'queryAllByAccessibilityState'],\n        findBy: ['findByA11yState', 'findByAccessibilityState'],\n        findAllBy: ['findAllByA11yState', 'findAllByAccessibilityState'],\n      },\n      matchObject\n    )(instance),\n    ...makeA11yQuery(\n      'accessibilityValue',\n      {\n        getBy: ['getByA11yValue', 'getByAccessibilityValue'],\n        getAllBy: ['getAllByA11yValue', 'getAllByAccessibilityValue'],\n        queryBy: ['queryByA11yValue', 'queryByAccessibilityValue'],\n        queryAllBy: ['queryAllByA11yValue', 'queryAllByAccessibilityValue'],\n        findBy: ['findByA11yValue', 'findByAccessibilityValue'],\n        findAllBy: ['findAllByA11yValue', 'findAllByAccessibilityValue'],\n      },\n      matchObject\n    )(instance),\n  } as any);\n"],"file":"a11yAPI.js"}