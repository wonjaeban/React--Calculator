{"version":3,"sources":["../../src/queries/unsafeProps.ts"],"names":["UNSAFE_getByProps","instance","getByPropsFn","props","findByProps","error","ErrorWithStack","UNSAFE_getAllByProps","getAllByPropsFn","results","findAllByProps","length","UNSAFE_queryByProps","queryByPropsFn","UNSAFE_queryAllByProps","bindUnsafeByPropsQueries"],"mappings":";;;;;;;AACA;;AACA;;;;AAGA,MAAMA,iBAAiB,GACrBC,QADwB,IAGxB,SAASC,YAAT,CAAsBC,KAAtB,EAA0D;AACxD,MAAI;AACF,WAAOF,QAAQ,CAACG,WAAT,CAAqBD,KAArB,CAAP;AACD,GAFD,CAEE,OAAOE,KAAP,EAAc;AACd,UAAM,IAAIC,sBAAJ,CAAmB,iCAAoBD,KAApB,CAAnB,EAA+CH,YAA/C,CAAN;AACD;AACF,CATH;;AAWA,MAAMK,oBAAoB,GACxBN,QAD2B,IAG3B,SAASO,eAAT,CAAyBL,KAAzB,EAA6D;AAC3D,QAAMM,OAAO,GAAGR,QAAQ,CAACS,cAAT,CAAwBP,KAAxB,CAAhB;;AACA,MAAIM,OAAO,CAACE,MAAR,KAAmB,CAAvB,EAA0B;AACxB,UAAM,IAAIL,sBAAJ,CACH,mCAAkC,2BAAaH,KAAb,CAAoB,EADnD,EAEJK,eAFI,CAAN;AAID;;AACD,SAAOC,OAAP;AACD,CAZH;;AAcA,MAAMG,mBAAmB,GACvBX,QAD0B,IAG1B,SAASY,cAAT,CAAwBV,KAAxB,EAA4D;AAC1D,MAAI;AACF,WAAOH,iBAAiB,CAACC,QAAD,CAAjB,CAA4BE,KAA5B,CAAP;AACD,GAFD,CAEE,OAAOE,KAAP,EAAc;AACd,WAAO,gCAAmBA,KAAnB,EAA0BQ,cAA1B,CAAP;AACD;AACF,CATH;;AAWA,MAAMC,sBAAsB,GAC1Bb,QAD6B,IAIKE,KAAD,IAAwC;AACzE,MAAI;AACF,WAAOI,oBAAoB,CAACN,QAAD,CAApB,CAA+BE,KAA/B,CAAP;AACD,GAFD,CAEE,OAAOE,KAAP,EAAc;AACd,WAAO,EAAP;AACD;AACF,CAVD,C,CAYA;;;AAcA;AACO,MAAMU,wBAAwB,GACnCd,QADsC,KAEZ;AAC1BD,EAAAA,iBAAiB,EAAEA,iBAAiB,CAACC,QAAD,CADV;AAE1BM,EAAAA,oBAAoB,EAAEA,oBAAoB,CAACN,QAAD,CAFhB;AAG1BW,EAAAA,mBAAmB,EAAEA,mBAAmB,CAACX,QAAD,CAHd;AAI1Ba,EAAAA,sBAAsB,EAAEA,sBAAsB,CAACb,QAAD;AAJpB,CAFY,CAAjC","sourcesContent":["import type { ReactTestInstance } from 'react-test-renderer';\nimport prettyFormat from 'pretty-format';\nimport { ErrorWithStack, prepareErrorMessage } from '../helpers/errors';\nimport { createQueryByError } from '../helpers/errors';\n\nconst UNSAFE_getByProps = (\n  instance: ReactTestInstance\n): ((props: { [propName: string]: any }) => ReactTestInstance) =>\n  function getByPropsFn(props: { [propName: string]: any }) {\n    try {\n      return instance.findByProps(props);\n    } catch (error) {\n      throw new ErrorWithStack(prepareErrorMessage(error), getByPropsFn);\n    }\n  };\n\nconst UNSAFE_getAllByProps = (\n  instance: ReactTestInstance\n): ((props: { [propName: string]: any }) => Array<ReactTestInstance>) =>\n  function getAllByPropsFn(props: { [propName: string]: any }) {\n    const results = instance.findAllByProps(props);\n    if (results.length === 0) {\n      throw new ErrorWithStack(\n        `No instances found with props:\\n${prettyFormat(props)}`,\n        getAllByPropsFn\n      );\n    }\n    return results;\n  };\n\nconst UNSAFE_queryByProps = (\n  instance: ReactTestInstance\n): ((props: { [propName: string]: any }) => ReactTestInstance | null) =>\n  function queryByPropsFn(props: { [propName: string]: any }) {\n    try {\n      return UNSAFE_getByProps(instance)(props);\n    } catch (error) {\n      return createQueryByError(error, queryByPropsFn);\n    }\n  };\n\nconst UNSAFE_queryAllByProps = (\n  instance: ReactTestInstance\n): ((props: {\n  [propName: string]: any;\n}) => Array<ReactTestInstance>) => (props: { [propName: string]: any }) => {\n  try {\n    return UNSAFE_getAllByProps(instance)(props);\n  } catch (error) {\n    return [];\n  }\n};\n\n// Unsafe aliases\nexport type UnsafeByPropsQueries = {\n  UNSAFE_getByProps: (props: { [key: string]: any }) => ReactTestInstance;\n  UNSAFE_getAllByProps: (props: {\n    [key: string]: any;\n  }) => Array<ReactTestInstance>;\n  UNSAFE_queryByProps: (props: {\n    [key: string]: any;\n  }) => ReactTestInstance | null;\n  UNSAFE_queryAllByProps: (props: {\n    [key: string]: any;\n  }) => Array<ReactTestInstance>;\n};\n\n// TODO: migrate to makeQueries pattern\nexport const bindUnsafeByPropsQueries = (\n  instance: ReactTestInstance\n): UnsafeByPropsQueries => ({\n  UNSAFE_getByProps: UNSAFE_getByProps(instance),\n  UNSAFE_getAllByProps: UNSAFE_getAllByProps(instance),\n  UNSAFE_queryByProps: UNSAFE_queryByProps(instance),\n  UNSAFE_queryAllByProps: UNSAFE_queryAllByProps(instance),\n});\n"],"file":"unsafeProps.js"}